# Generated by Django 2.2.3 on 2020-03-22 14:55

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Poet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, verbose_name='姓名')),
                ('dynasty', models.CharField(choices=[('未知', '未知'), ('唐代', '唐代'), ('宋代', '宋代'), ('元代', '元代'), ('明代', '明代'), ('清代', '清代'), ('先秦', '先秦'), ('两汉', '两汉'), ('魏晋', '魏晋'), ('南北朝', '南北朝'), ('隋代', '隋代'), ('五代', '五代'), ('辽朝', '辽朝'), ('金朝', '金朝'), ('近代', '近代'), ('现当代', '现当代')], default='未知', max_length=10, verbose_name='朝代')),
                ('other_name', models.CharField(blank=True, max_length=50, verbose_name='别称')),
                ('image', models.ImageField(default='Poet/default.png', upload_to='Poet/%Y/%m/%d/', verbose_name='肖像')),
                ('born', models.IntegerField(blank=True, null=True, verbose_name='生于')),
                ('death', models.IntegerField(blank=True, null=True, verbose_name='卒于')),
                ('introduce', models.TextField(blank=True, null=True, verbose_name='简介')),
                ('lifetime', models.TextField(blank=True, null=True, verbose_name='生平')),
                ('achievement', models.TextField(blank=True, null=True, verbose_name='成就')),
                ('remark', models.IntegerField(default=-1, unique=True)),
                ('fav_num', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='收藏数')),
                ('work_num', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='收录作品数')),
            ],
            options={
                'verbose_name': '诗人',
                'verbose_name_plural': '诗人',
            },
        ),
        migrations.CreateModel(
            name='Poem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('image', models.ImageField(default='Poem/default.png', upload_to='Poem/%Y/%m/%d/', verbose_name='情景图片')),
                ('tags', models.CharField(blank=True, max_length=300, null=True, verbose_name='标签')),
                ('background', models.TextField(blank=True, null=True, verbose_name='背景')),
                ('appreciation', models.TextField(blank=True, null=True, verbose_name='鉴赏')),
                ('annotation', models.TextField(blank=True, null=True, verbose_name='注解')),
                ('translation', models.TextField(blank=True, null=True, verbose_name='译文')),
                ('fav_num', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='收藏数')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poetry.Poet', verbose_name='作者')),
            ],
            options={
                'verbose_name': '诗歌',
                'verbose_name_plural': '诗歌',
            },
        ),
        migrations.CreateModel(
            name='MingJu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='标题')),
                ('content', models.CharField(max_length=50, verbose_name='名句')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poetry.Poet', verbose_name='作者')),
                ('poem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poetry.Poem', verbose_name='诗歌')),
            ],
            options={
                'verbose_name': '诗歌名句',
                'verbose_name_plural': '诗歌名句',
            },
        ),
    ]
